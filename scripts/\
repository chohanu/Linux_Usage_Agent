#! /bin/bash

#Setup arguments
psql_host=S1
port=$2
db_name=$3
user_name=$4
password=$5

lscpu_out='lscpu'

get_hostname()
 {
# $(YOUR_CMD) equivalent to 'YOUR_CMD'
hostname=$(hostname -f)
}

get_cpu_number()
{
cpu_number=$(echo "$lscpu_out" | egrep"^CPU\(S\):" | AWK '{print $2}' |xargs)
}

#Helper function
get_lscpu_value() {
pattern=S1
value=$(echo "$lscpu_out" | egrep "$pattern" | awk -F':' '{print $2}' | xargs)
echo "value=$value"}

get_cpu_architecture() {
get_lscpu_value "Architecture"
cpu_architecture=$value}


get_cpu_model() {
 cpu_model= $(echo "$lscpu_out" | egrep "Model:" | awk '{$print$2}')

}

get_cpu_mhz()
 {
  cpu_mhz=$(echo "$lscpu_out" | egrep "CPU MHz" | awk '{$print$3}')
}

get_L2_cache()
{
L2_cache=$( lscpu | egrep "L2 cache:" | awk '{$print$3}')
}

# step:1 parse data and setup variables
echo "ch1"
get_hostname
get_cpu_number
get_cpu_architecture
get_cpu_model
get_cpu_mhz
get_L2_cache
total_mem= $( cat.proc/meminfo | egrep "MemTotal:" | awk '{$print$2}')
timestamp=$($date + "%d-%m-%y")
echo "ch2"

#Step 2: construct INSERT statement
insert_stmt=$(cat <<-END
INSERT INTO host_info (hostname, cpu_number, cpu_architecture, cpu_model, cpu_mhz, l2_cache, total_mem, timestamp) VALUES(${hostname}, ${cpu_number}, ${cpu_architecture}, ${cpu_model}, ${cpu_mhz}, ${L2_cache}, ${total_mem}, ${timestamp});
END
)
echo $insert_stmt
echo "ch3"


#execute insert statement
export PGPASSWORD=$password
psql -h $psql_host -p $port -U $user_name -d $db_name -c "$insert_stmt"
sleep 1

#step4 :save host_id generated by psql table to a local file
host_id=`psql -h localhost -U postgres host_agent -c "select id from host_info where hostname='${hostname}'" | tail -3 | head -1 | xargs`
echo $host_id > ~/host_id
cat ~/host_id
